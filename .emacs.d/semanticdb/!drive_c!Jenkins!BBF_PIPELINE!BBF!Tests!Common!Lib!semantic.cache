;; Object Lib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Lib/"
  :tables
  (list
    (semanticdb-table "test_BBF_environ.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
.. module:: test_BBF_environ
   :synopsis: test stub for BBF_environ

copyright 2015 Brown Bag Films
\"\"\"" code nil nil [25 133])
            ("__future__" include nil nil [134 171])
            ("pytest" include nil nil [173 186])
            ("BBF_environ" include nil nil [188 206])
            ("setup_module" function nil nil [208 237])
            ("teardown_module" function nil nil [238 270])
            ("TestBBF_environ" type
               (:superclasses ("object")
                :members 
                  ( ("setup_class" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [322 326]))                          )
                        (reparse-symbol indented_block_body) [306 342])
                    ("teardown_class" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [366 370]))                          )
                        (reparse-symbol indented_block_body) [347 386])
                    ("test_register_in_main" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [417 421]))                          
                        :documentation " Check if we're registered in __main__ ")
                        (reparse-symbol indented_block_body) [391 546]))                  
                :type "class")
                nil [271 546]))          
      :file "test_BBF_environ.py"
      :pointmax 575
      :fsize 607
      :lastmodtime '(21919 53814 0 0)
      :unmatched-syntax nil))
  :file "!drive_c!Jenkins!BBF_PIPELINE!BBF!Tests!Common!Lib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
