;; Object tpGlobals/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "tpGlobals/"
  :tables
  (list
    (semanticdb-table "shotgun.py"
      :major-mode 'python-mode
      :tags 
        '( ("urllib2" include nil nil [1 15])
            ("commands" include nil nil [16 31])
            ("os" include nil nil [32 41])
            ("tpGlobals.db" include nil nil [43 74])
            ("reload" code nil nil [75 91])
            ("tpGlobals.path" include nil nil [92 121])
            ("tpGlobals.project" include nil nil [122 157])
            ("pathPrefix" variable nil nil [159 186])
            ("initShotgun" function nil nil [188 584])
            ("Create" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [622 645]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [613 617]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [600 646])
                    ("version" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [661 665])
                            ("infoList" variable nil (reparse-symbol function_parameters) [668 676]))                          )
                        (reparse-symbol indented_block_body) [648 2088])
                    ("timelog" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2103 2107])
                            ("timelogs" variable nil (reparse-symbol function_parameters) [2109 2117]))                          )
                        (reparse-symbol indented_block_body) [2090 3175]))                  
                :type "class")
                nil [585 3175])
            ("Url" type
               (:members 
                  ( ("openInBrowser" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3207 3211]))                          )
                        (reparse-symbol indented_block_body) [3188 3436]))                  
                :type "class")
                nil [3176 3436])
            ("Get" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3475 3498]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3465 3469]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3451 3499])
                    ("entityDict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3517 3521]))                          )
                        (reparse-symbol indented_block_body) [3501 4265])
                    ("user" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4277 4281])
                            ("userName" variable nil (reparse-symbol function_parameters) [4283 4291]))                          )
                        (reparse-symbol indented_block_body) [4267 4436])
                    ("shot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4448 4452])
                            ("ID" variable nil (reparse-symbol function_parameters) [4454 4456]))                          )
                        (reparse-symbol indented_block_body) [4438 4628])
                    ("asset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4641 4645])
                            ("ID" variable nil (reparse-symbol function_parameters) [4647 4649]))                          )
                        (reparse-symbol indented_block_body) [4630 4809]))                  
                :type "class")
                nil [3439 4809])
            ("Events" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4849 4872]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4839 4843]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4825 4873])
                    ("process" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4889 4893])
                            ("num" variable nil (reparse-symbol function_parameters) [4896 4899]))                          )
                        (reparse-symbol indented_block_body) [4876 8192]))                  
                :type "class")
                nil [4810 8192])
            ("convertShotgun" function
               (:documentation "
	Info: 	Converts a Database column name into its Shotgun equivalent
	Args:	1. 	field name
	"
                :arguments 
                  ( ("fieldName" variable nil (reparse-symbol function_parameters) [8462 8471]))                  )
                nil [8442 10090])
            ("convertDatabase" function
               (:documentation "
	Info: 	Converts a Shotgun EventLog Data into its Database equivalent
	Args:	
			1. 	meta		( shotgunEventLog[ \"meta\" ] )
			2. 	mode 		( Options: create, update )
	"
                :arguments 
                  ( ("meta" variable nil (reparse-symbol function_parameters) [10115 10119])
                    ("mode" variable nil (reparse-symbol function_parameters) [10121 10125]))                  )
                nil [10094 15787]))          
      :file "shotgun.py"
      :pointmax 15787
      :fsize 16087
      :lastmodtime '(22266 18270 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "db.py"
      :file "db.py"
      :fsize 5974
      :lastmodtime '(22266 18270 0 0))
    (semanticdb-table "path.py"
      :file "path.py"
      :fsize 15738
      :lastmodtime '(22266 18270 0 0)))
  :file "!drive_c!Users!shaas!workspace!pipeline-v3.5!PYTHON!python!tpGlobals!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
