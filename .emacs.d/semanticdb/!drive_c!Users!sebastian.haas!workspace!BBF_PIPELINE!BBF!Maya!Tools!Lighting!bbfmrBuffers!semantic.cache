;; Object bbfmrBuffers/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "bbfmrBuffers/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("pymel.core" include nil nil [1 24])
            ("pymel.internal.plogging" include nil nil [26 67])
            ("logging" include nil nil [69 83])
            ("log" variable nil nil [84 117])
            ("bbfEntity" include nil nil [119 135])
            ("bbfUtil" include nil nil [136 150])
            ("bbfUI.bbfUI" include nil nil [151 178])
            ("__main__" include nil nil [180 207])
            ("bbfShader" include nil nil [209 225])
            ("bbfShader.utils" include nil nil [226 248])
            ("bbfUtil" include nil nil [249 263])
            ("bbfUI.bbfUI" include nil nil [264 291])
            ("bbfShader" include nil nil [292 308])
            ("bbfShader.utils" include nil nil [309 331])
            ("__main__" include nil nil [333 360])
            ("getAllEntities" function nil nil [362 549])
            ("getMaskObjects" function (:arguments 
              ( ("maskType" variable nil (reparse-symbol function_parameters) [569 577]))              ) nil [550 817])
            ("getMaskObjectsDict" function nil nil [818 1076])
            ("getObjectSets" function (:arguments 
              ( ("setType" variable nil (reparse-symbol function_parameters) [1096 1103]))              ) nil [1078 1283])
            ("getObjectSetsDict" function nil nil [1284 1455])
            ("getBuffersObjectSets" function nil nil [1456 2841])
            ("" code nil nil [2848 2850])
            ("createObjectSets" function (:decorators 
              ( ("bbfUtil.preserve_selection" function (:type "decorator") nil nil))              ) nil [2851 4886])
            ("rebuildPasses" function
               (:decorators 
                  ( ("bbfUtil.preserve_selection" function (:type "decorator") nil nil))                  
                :arguments 
                  ( ("bufferSelection" variable nil (reparse-symbol function_parameters) [4934 4949]))                  )
                nil [4888 10681])
            ("'''
stringOptionExists(name)
setStringOption(name, value)
getStringOption(name)
removeStringOption(name)
The usage is pretty simple.  stringOptionExists checks if a string option already exists
(returning True or False), setStringOption will set a string option value, getStringOption will
return a string option value, and removeStringOption will delete the string option.
setStringOption and getStringOption will match string option data types with python data types.


# Set unified sampling string options.
setStringOption(\"unified sampling\", True)
setStringOption(\"samples quality\", (0.5, 0.5, 0.5, 0.5))
setStringOption(\"samples min\", 1.0)
setStringOption(\"samples max\", 100.0)
setStringOption(\"samples error cutoff\", (0.0, 0.0, 0.0, 0.0))

# Print unified sampling values
print getStringOption(\"unified sampling\")
print getStringOption(\"samples quality\")
print getStringOption(\"samples min\")
print getStringOption(\"samples max\")
print getStringOption(\"samples error cutoff\")

# Remove unified sampling string options
removeStringOption(\"unified sampling\")
removeStringOption(\"samples quality\")
removeStringOption(\"samples min\")
removeStringOption(\"samples max\")
removeStringOption(\"samples error cutoff\")
'''" code nil nil [10683 11898])
            ("maya.cmds" include nil nil [11901 11925])
            ("valueToStrings" function (:arguments 
              ( ("value" variable nil (reparse-symbol function_parameters) [11946 11951]))              ) nil [11927 12869])
            ("stringToValue" function (:arguments 
              ( ("string_value" variable nil (reparse-symbol function_parameters) [12888 12900])
                ("string_type" variable nil (reparse-symbol function_parameters) [12902 12913]))              ) nil [12870 13469])
            ("stringOptionExists" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [13493 13497]))              ) nil [13470 13699])
            ("findStringOptionIndex" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [13726 13730]))              ) nil [13700 14037])
            ("setStringOption" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [14058 14062])
                ("value" variable nil (reparse-symbol function_parameters) [14064 14069]))              ) nil [14038 14439])
            ("getStringOption" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [14460 14464]))              ) nil [14440 14725])
            ("removeStringOption" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [14749 14753]))              ) nil [14726 14871]))          
      :file "__init__.py"
      :pointmax 14871
      :fsize 15252
      :lastmodtime '(21915 54357 0 0)
      :unmatched-syntax nil)


)
  :file "!drive_c!Users!sebastian.haas!workspace!BBF_PIPELINE!BBF!Maya!Tools!Lighting!bbfmrBuffers!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
