;; Object Other/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Other/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags nil
      :file "__init__.py"
      :pointmax 1
      :unmatched-syntax nil)
    (semanticdb-table "bb_hairBuilder_TLS.py"
      :major-mode 'python-mode
      :tags 
        '( ("pymel.core" include nil nil [1 25])
            ("wind" variable nil nil [27 89])
            ("columnLayout" code nil nil [90 162])
            ("text" code nil nil [164 208])
            ("startJnt" variable nil nil [209 244])
            ("text" code nil nil [245 287])
            ("endJnt" variable nil nil [288 321])
            ("text" code nil nil [322 359])
            ("nameTxt" variable nil nil [360 381])
            ("amt" variable nil nil [383 498])
            ("but" variable nil nil [500 553])
            ("buildDynamic" function nil nil [555 4386]))          
      :file "bb_hairBuilder_TLS.py"
      :pointmax 4419
      :unmatched-syntax '((NAME 4403 . 4413) ($EOI 4419 . 4419)))
    (semanticdb-table "bb_hugglewugsBlendshapesConnection.py"
      :major-mode 'python-mode
      :tags 
        '( ("pymel.core" include nil nil [1 25])
            ("cmds" code nil nil [27 174])
            ("cmds" code nil nil [175 321])
            ("select" code nil nil [324 350])
            ("select" code nil nil [351 387])
            ("select" code nil nil [388 425])
            ("select" code nil nil [426 461])
            ("select" code nil nil [462 498])
            ("select" code nil nil [499 533])
            ("select" code nil nil [534 575])
            ("select" code nil nil [576 611])
            ("select" code nil nil [612 645])
            ("blendShape" code nil nil [647 672])
            ("blendShape" code nil nil [674 779])
            ("blendShape" code nil nil [780 885])
            ("blendShape" code nil nil [887 995])
            ("blendShape" code nil nil [996 1104])
            ("select" code nil nil [1106 1138])
            ("select" code nil nil [1139 1175])
            ("blendShape" code nil nil [1176 1212])
            ("select" code nil nil [1214 1246])
            ("select" code nil nil [1247 1283])
            ("blendShape" code nil nil [1284 1320])
            ("select" code nil nil [1322 1356])
            ("select" code nil nil [1357 1398])
            ("blendShape" code nil nil [1399 1432])
            ("setAttr" code nil nil [1434 1486]))          
      :file "bb_hugglewugsBlendshapesConnection.py"
      :pointmax 1549
      :unmatched-syntax nil)
    (semanticdb-table "bb_lockAndHideNodes.py"
      :major-mode 'python-mode
      :tags 
        '( ("__main__" include nil nil [1 16])
            ("pymel.core" include nil nil [17 42])
            ("lockAndHideExtra" function nil nil [44 5498]))          
      :file "bb_lockAndHideNodes.py"
      :pointmax 5498
      :unmatched-syntax nil)
    (semanticdb-table "bb_lockAndHideNodes_DMS2.py"
      :major-mode 'python-mode
      :tags 
        '( ("__main__" include nil nil [1 16])
            ("pymel.core" include nil nil [17 42])
            ("lockAndHideExtra" function nil nil [44 5664]))          
      :file "bb_lockAndHideNodes_DMS2.py"
      :pointmax 5664
      :unmatched-syntax nil)
    (semanticdb-table "bb_splineBuilder_TLS.py"
      :major-mode 'python-mode
      :tags 
        '( ("wind" variable nil nil [1 63])
            ("columnLayout" code nil nil [64 136])
            ("text" code nil nil [138 175])
            ("txt" variable nil nil [176 193])
            ("amt" variable nil nil [195 312])
            ("chk" variable nil nil [314 359])
            ("but0" variable nil nil [361 412])
            ("buildRope" function nil nil [416 4560])
            ("showWindow" code nil nil [4582 4598]))          
      :file "bb_splineBuilder_TLS.py"
      :pointmax 4602
      :unmatched-syntax '((NAME 524 . 531) (AS 554 . 556)))
    (semanticdb-table "connect_to_facialUI.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
bb_mouthJawHUG_CLS.py    -    Python script

DESCRIPTION:
class that creates a mouth and jaw system, constraining it also to the facial UI

AUTHORS:
Eoghan Garvey, Ronan O Neill

REQUIRES:
Facial UI
sinWave ma
\"\"\"" code nil nil [1 218])
            ("RiggingLib.Anatomical.bb_rig_CLS" include nil nil [220 265])
            ("pymel.core" include nil nil [294 317])
            ("maya.cmds" include nil nil [318 342])
            ("os" include nil nil [343 352])
            ("RiggingLib.General.bb_shapes_CLS" include nil nil [354 399])
            ("reload" code nil nil [400 411])
            ("reload" code nil nil [412 423])
            ("RiggingLib.General.bb_constraints_UTL" include nil nil [425 475])
            ("reload" code nil nil [476 487])
            ("RiggingLib.General.bb_transform_UTL" include nil nil [488 536])
            ("logging" include nil nil [538 552])
            ("logger" variable nil nil [553 589])
            ("connectFacialUI" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [654 685]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [639 643]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [626 686])
                    ("initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [706 710]))                          )
                        (reparse-symbol indented_block_body) [691 4494])
                    ("addBlends" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4553 4557]))                          )
                        (reparse-symbol indented_block_body) [4539 7618])
                    ("errorCheck" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7667 7671])
                            ("testList" variable nil (reparse-symbol function_parameters) [7673 7681]))                          )
                        (reparse-symbol indented_block_body) [7652 8085])
                    ("dualControlNetwork" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8126 8130])
                            ("ctrlNode" variable nil (reparse-symbol function_parameters) [8132 8140])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [8142 8151])
                            ("negBlend" variable nil (reparse-symbol function_parameters) [8153 8161])
                            ("posBlend" variable nil (reparse-symbol function_parameters) [8163 8171]))                          )
                        (reparse-symbol indented_block_body) [8103 8776])
                    ("quadControlNetwork" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8812 8816])
                            ("ctrlNode" variable nil (reparse-symbol function_parameters) [8818 8826])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [8828 8837])
                            ("upL_blend" variable nil (reparse-symbol function_parameters) [8839 8848])
                            ("upR_blend" variable nil (reparse-symbol function_parameters) [8850 8859])
                            ("dnL_blend" variable nil (reparse-symbol function_parameters) [8861 8870])
                            ("dnR_blend" variable nil (reparse-symbol function_parameters) [8878 8887])
                            ("corrective" variable nil (reparse-symbol function_parameters) [8895 8905]))                          )
                        (reparse-symbol indented_block_body) [8789 16467])
                    ("mouthBlends" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16530 16534]))                          )
                        (reparse-symbol indented_block_body) [16514 19859])
                    ("rigTongue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19904 19908]))                          )
                        (reparse-symbol indented_block_body) [19890 22883])
                    ("browSetup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22924 22928])
                            ("ctrl" variable nil (reparse-symbol function_parameters) [22930 22934])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [22936 22945])
                            ("targetUp" variable nil (reparse-symbol function_parameters) [22947 22955])
                            ("targetDown" variable nil (reparse-symbol function_parameters) [22957 22967]))                          )
                        (reparse-symbol indented_block_body) [22910 23559])
                    ("connectBrows" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23598 23602]))                          )
                        (reparse-symbol indented_block_body) [23581 24402])
                    ("rigEyes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24437 24441]))                          )
                        (reparse-symbol indented_block_body) [24425 30929])
                    ("quadControlNetworkThreshold" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30988 30992])
                            ("ctrlNode" variable nil (reparse-symbol function_parameters) [30994 31002])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [31004 31013])
                            ("upL_blend" variable nil (reparse-symbol function_parameters) [31015 31024])
                            ("upR_blend" variable nil (reparse-symbol function_parameters) [31026 31035])
                            ("dnL_blend" variable nil (reparse-symbol function_parameters) [31037 31046])
                            ("dnR_blend" variable nil (reparse-symbol function_parameters) [31048 31057])
                            ("corrective" variable nil (reparse-symbol function_parameters) [31059 31069]))                          )
                        (reparse-symbol indented_block_body) [30956 46942])
                    ("runAllChecks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46999 47003]))                          )
                        (reparse-symbol indented_block_body) [46982 47224])
                    ("importUI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47268 47272]))                          )
                        (reparse-symbol indented_block_body) [47255 47846]))                  
                :type "class")
                nil [592 47846])
            ("zeroOut" function
               (:documentation "
    returnType : parent group of last item in 'sel'
    "
                :arguments 
                  ( ("sel" variable nil (reparse-symbol function_parameters) [47876 47879]))                  )
                nil [47864 48319])
            ("remove_rig" function nil nil [48320 48431])
            ("rig" function nil nil [48440 49107]))          
      :file "connect_to_facialUI.py"
      :pointmax 49138
      :unmatched-syntax nil)
    (semanticdb-table "DMS2_seperateEyelidsConnection.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
bb_mouthJawHUG_CLS.py    -    Python script

DESCRIPTION:
class that creates a mouth and jaw system, constraining it also to the facial UI

AUTHORS:
Eoghan Garvey, Ronan O Neill

REQUIRES:
Facial UI
sinWave ma
\"\"\"" code nil nil [1 218])
            ("RiggingLib.Anatomical.bb_rigClass_CLS" include nil nil [220 271])
            ("pymel.core" include nil nil [298 322])
            ("maya.cmds" include nil nil [323 347])
            ("RiggingLib.General.bb_shapes_CLS" include nil nil [349 394])
            ("reload" code nil nil [409 420])
            ("RiggingLib.General.bb_constraints_UTL" include nil nil [503 553])
            ("reload" code nil nil [554 565])
            ("RiggingLib.General.bb_transform_UTL" include nil nil [566 614])
            ("\"\"\"
suck_blow_ctrl = 'suckBlow_CTRL', nervous_ctrl = 'Nervous_CTRL',
jawBkFw_ctrl = 'jawBackForward_CTRL',  topRollOutIn_ctrl = 'topRollOutIn_CTRL',
botRollOutIn_ctrl = 'botRollOutIn_CTRL', topBot_ctrl = 'topBottom_CTRL',
peanut_ctrl = 'peanut_CTRL', upDn_ctrl = 'upDown_CTRL',
wideNarr_ctrl = 'wideNarrow_CTRL', cheek_ctrl = 'cheekUp_CTRL',
blow_L_bs = 'mouth_blow_L_BS', blow_R_bs = 'mouth_blow_R_BS',
suck_L_bs = 'mouth_suck_L_BS', suck_R_bs = 'mouth_suck_R_BS',
trembleRef = 'mouth_trembleRef_BS', trembleRef_blend_shapes = 'trembleRef_blendShapes',
roar_ctrl = 'roar_CTRL',
lEyelidTopMsh = 'Eyelid_Upper_L_MSH', rEyelidTopMsh = 'Eyelid_Upper_R_MSH',
lEyelidBotMsh = 'Eyelid_Lower_L_MSH', rEyelidBotMsh = 'Eyelid_Lower_R_MSH',
lEyeLatt_blendShapes = 'eyeball_latticeSquashStretch_L_blendShapes',
rEyeLatt_blendShapes = 'eyeball_latticeSquashStretch_R_blendShapes',
lEyeLattWide_BS = 'eyeball_latticeWide_L_BS', rEyeLattWide_BS = 'eyeball_latticeWide_R_BS',
lEyeLattSquint_BS = 'eyeball_latticeSquint_L_BS', rEyeLattSquint_BS = 'eyeball_latticeSquint_R_BS',
mouthTopRollIn_bs = 'mouth_topRollIn_BS', mouthBotRollIn_bs = 'mouth_botRollIn_BS', mouthTopRollOut_bs = 'mouth_topRollOut_BS', mouthBotRollOut_bs = 'mouth_botRollOut_BS',
mouthDown_bs = 'mouth_down_BS', mouthUp_bs = 'mouth_up_BS', jawBack_bs = 'mouth_jawBack_BS', jawFrwd_bs = 'mouth_jawForward_BS',
cheekL_bs = 'mouth_cheekUp_L_BS', cheekR_bs = 'mouth_cheekUp_R_BS',
mouthNervous_bs = 'mouth_nervous_BS', mouthPeanut_bs = 'mouth_peanut_BS',
roar_bs = 'mouth_roar_BS', mouthStretch_bs = 'mouth_stretch_BS',


if objExists(suck_blow_ctrl):
    self.suck_blow_ctrl = PyNode(suck_blow_ctrl)
if objExists(nervous_ctrl):
    self.nervous_ctrl = PyNode(nervous_ctrl)

if objExists(jawBkFw_ctrl):
    self.jawBkFw_ctrl = PyNode(jawBkFw_ctrl)

if objExists(topBot_ctrl):
    self.topBot_ctrl = PyNode(topBot_ctrl)

if objExists(topRollOutIn_ctrl):
    self.topRollOutIn_ctrl = PyNode(topRollOutIn_ctrl)
if objExists(botRollOutIn_ctrl):
    self.botRollOutIn_ctrl = PyNode(botRollOutIn_ctrl)

if objExists(peanut_ctrl):
    self.peanut_ctrl = PyNode(peanut_ctrl)
if objExists(upDn_ctrl):
    self.upDn_ctrl = PyNode(upDn_ctrl)
if objExists(wideNarr_ctrl):
    self.wideNarr_ctrl = PyNode(wideNarr_ctrl)
if objExists(cheek_ctrl):
    self.cheek_ctrl = PyNode(cheek_ctrl)

if objExists(lEyelidTopMsh):
    self.lEyelidTopMsh = PyNode(lEyelidTopMsh)
if objExists(rEyelidTopMsh):
    self.rEyelidTopMsh = PyNode(rEyelidTopMsh)

if objExists(lEyelidBotMsh):
    self.lEyelidBotMsh = PyNode(lEyelidBotMsh)
if objExists(rEyelidBotMsh):
    self.rEyelidBotMsh = PyNode(rEyelidBotMsh)

if objExists(roar_ctrl):
    self.roar_ctrl = PyNode(roar_ctrl)
if objExists(roar_bs):
    self.roar_bs = PyNode(roar_bs)
if objExists(suck_bs):
    self.suck_bs = PyNode(suck_bs)

if objExists(mouthPeanut_bs):
    self.mouthPeanut_bs = PyNode(mouthPeanut_bs)

if objExists(mouthNervous_bs):
    self.mouthNervous_bs = PyNode(mouthNervous_bs)

if objExists(mouthTopRollIn_bs):
    self.mouthTopRollIn_bs = PyNode(mouthTopRollIn_bs)
if objExists(mouthBotRollIn_bs):
    self.mouthBotRollIn_bs = PyNode(mouthBotRollIn_bs)
if objExists(mouthTopRollOut_bs):
    self.mouthTopRollOut_bs = PyNode(mouthTopRollOut_bs)
if objExists(mouthBotRollOut_bs):
    self.mouthBotRollOut_bs = PyNode(mouthBotRollOut_bs)
if objExists(mouthDown_bs):
    self.mouthDown_bs = PyNode(mouthDown_bs)
if objExists(mouthUp_bs):
    self.mouthUp_bs = PyNode(mouthUp_bs)
if objExists(jawBack_bs):
    self.jawBack_bs = PyNode(jawBack_bs)
if objExists(jawFrwd_bs):
    self.jawFrwd_bs = PyNode(jawFrwd_bs)
if objExists(cheekL_bs):
    self.cheekL_bs = PyNode(cheekL_bs)
if objExists(cheekR_bs):
    self.cheekR_bs = PyNode(cheekR_bs)
if objExists(mouthNarrow_bs):

#if objExists(blow_L_bs):
    #self.blow_L_bs = PyNode(blow_L_bs)
#if objExists(blow_R_bs):
    #self.blow_R_bs = PyNode(blow_R_bs)
#if objExists(suck_L_bs):
    #self.suck_L_bs = PyNode(suck_L_bs)
#if objExists(suck_R_bs):
    #self.suck_R_bs = PyNode(suck_R_bs)


if objExists(trembleRef):
    self.trembleRef = PyNode(trembleRef)


if objExists(mouthSquash_bs):
    #self.mouthSquash_bs = PyNode(mouthSquash_bs)
if objExists(mouthStretch_bs):
    #self.mouthStretch_bs = PyNode(mouthStretch_bs)

if objExists(lEyeLatt_blendShapes):
    self.lEyeLatt_blendShapes = PyNode(lEyeLatt_blendShapes)
if objExists(rEyeLatt_blendShapes):
    self.rEyeLatt_blendShapes = PyNode(rEyeLatt_blendShapes)


if objExists(lEyeLattWide_BS):
    self.lEyeLattWide_BS = PyNode(lEyeLattWide_BS)
if objExists(rEyeLattWide_BS):
    self.rEyeLattWide_BS = PyNode(rEyeLattWide_BS)
if objExists(lEyeLattSquint_BS):
    self.lEyeLattSquint_BS = PyNode(lEyeLattSquint_BS)
if objExists(rEyeLattSquint_BS):
    self.rEyeLattSquint_BS = PyNode(rEyeLattSquint_BS)

if objExists(tonsil_01_jnt):
    self.tonsil_01_jnt = PyNode(tonsil_01_jnt)

if objExists(tonsil_02_jnt):
    self.tonsil_02_jnt = PyNode(tonsil_02_jnt)



\"\"\"" code nil nil [753 5713])
            ("hugFacialExtra" type
               (:superclasses ("rcl.rigClass")
                :members 
                  ( ("initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5772 5776])
                            ("mouthOoo_ctrl" variable nil (reparse-symbol function_parameters) [5779 5792])
                            ("mouthR_ctrl" variable nil (reparse-symbol function_parameters) [5807 5818])
                            ("mouthMBP_ctrl" variable nil (reparse-symbol function_parameters) [5831 5844])
                            ("mouthFV_ctrl" variable nil (reparse-symbol function_parameters) [5867 5879])
                            ("mouthOH_ctrl" variable nil (reparse-symbol function_parameters) [5893 5905])
                            ("mouthE_ctrl" variable nil (reparse-symbol function_parameters) [5919 5930])
                            ("tongue01_ctrl" variable nil (reparse-symbol function_parameters) [5951 5964])
                            ("tongue02_ctrl" variable nil (reparse-symbol function_parameters) [5985 5998])
                            ("tongue03_ctrl" variable nil (reparse-symbol function_parameters) [6019 6032])
                            ("rBrowUpDn_ctrl" variable nil (reparse-symbol function_parameters) [6061 6075])
                            ("rBrowOut_ctrl" variable nil (reparse-symbol function_parameters) [6099 6112])
                            ("rBrowIn_ctrl" variable nil (reparse-symbol function_parameters) [6133 6145])
                            ("lBrowUpDn_ctrl" variable nil (reparse-symbol function_parameters) [6173 6187])
                            ("lBrowOut_ctrl" variable nil (reparse-symbol function_parameters) [6211 6224])
                            ("lBrowIn_ctrl" variable nil (reparse-symbol function_parameters) [6245 6257])
                            ("blow_ctrl" variable nil (reparse-symbol function_parameters) [6285 6294])
                            ("jaw_ctrl" variable nil (reparse-symbol function_parameters) [6310 6318])
                            ("happy_sad_ctrl" variable nil (reparse-symbol function_parameters) [6333 6347])
                            ("wideSqnt_ctrl" variable nil (reparse-symbol function_parameters) [6376 6389])
                            ("rEye_ctrl" variable nil (reparse-symbol function_parameters) [6411 6420])
                            ("lEye_ctrl" variable nil (reparse-symbol function_parameters) [6437 6446])
                            ("mouth_main_ctrl" variable nil (reparse-symbol function_parameters) [6463 6478])
                            ("lips_up_ctrl" variable nil (reparse-symbol function_parameters) [6503 6515])
                            ("lips_down_ctrl" variable nil (reparse-symbol function_parameters) [6534 6548])
                            ("blink_ctrl" variable nil (reparse-symbol function_parameters) [6569 6579])
                            ("peanutUp_ctrl" variable nil (reparse-symbol function_parameters) [6604 6617])
                            ("peanutDown_ctrl" variable nil (reparse-symbol function_parameters) [6638 6653])
                            ("tremble_ctrl" variable nil (reparse-symbol function_parameters) [6684 6696])
                            ("trembleMotion_Attr" variable nil (reparse-symbol function_parameters) [6715 6733])
                            ("chestIk_ctrl" variable nil (reparse-symbol function_parameters) [6775 6787])
                            ("L_footIK_ctrl" variable nil (reparse-symbol function_parameters) [6807 6820])
                            ("R_footIK_ctrl" variable nil (reparse-symbol function_parameters) [6843 6856])
                            ("lEyelidTopCtrl" variable nil (reparse-symbol function_parameters) [6888 6902])
                            ("rEyelidTopCtrl" variable nil (reparse-symbol function_parameters) [6925 6939])
                            ("lEyelidBotCtrl" variable nil (reparse-symbol function_parameters) [6970 6984])
                            ("rEyelidBotCtrl" variable nil (reparse-symbol function_parameters) [7010 7024])
                            ("facial_blend_shapes" variable nil (reparse-symbol function_parameters) [7059 7078])
                            ("sine_Attr" variable nil (reparse-symbol function_parameters) [7102 7111])
                            ("head_mesh" variable nil (reparse-symbol function_parameters) [7134 7143])
                            ("ooo_bs" variable nil (reparse-symbol function_parameters) [7170 7176])
                            ("r_bs" variable nil (reparse-symbol function_parameters) [7199 7203])
                            ("mbp_bs" variable nil (reparse-symbol function_parameters) [7224 7230])
                            ("fv_bs" variable nil (reparse-symbol function_parameters) [7261 7266])
                            ("oh_bs" variable nil (reparse-symbol function_parameters) [7288 7293])
                            ("e_bs" variable nil (reparse-symbol function_parameters) [7315 7319])
                            ("suck_bs" variable nil (reparse-symbol function_parameters) [7349 7356])
                            ("blow_bs" variable nil (reparse-symbol function_parameters) [7380 7387])
                            ("tremble_bs" variable nil (reparse-symbol function_parameters) [7411 7421])
                            ("browDn_L" variable nil (reparse-symbol function_parameters) [7456 7464])
                            ("browDn_R" variable nil (reparse-symbol function_parameters) [7489 7497])
                            ("browIn_L" variable nil (reparse-symbol function_parameters) [7522 7530])
                            ("browIn_R" variable nil (reparse-symbol function_parameters) [7561 7569])
                            ("browOut_L" variable nil (reparse-symbol function_parameters) [7592 7601])
                            ("browOut_R" variable nil (reparse-symbol function_parameters) [7625 7634])
                            ("brow_frownCorrL_bs" variable nil (reparse-symbol function_parameters) [7666 7684])
                            ("brow_frownCorrR_bs" variable nil (reparse-symbol function_parameters) [7713 7731])
                            ("brow_sadCorrL_bs" variable nil (reparse-symbol function_parameters) [7768 7784])
                            ("brow_sadCorrR_bs" variable nil (reparse-symbol function_parameters) [7811 7827])
                            ("mouthSmileCor_L_bs" variable nil (reparse-symbol function_parameters) [7862 7880])
                            ("mouthSmileCor_R_bs" variable nil (reparse-symbol function_parameters) [7910 7928])
                            ("mouthSadCor_L_bs" variable nil (reparse-symbol function_parameters) [7966 7982])
                            ("mouthSadCor_R_bs" variable nil (reparse-symbol function_parameters) [8010 8026])
                            ("mouthTopUpR_bs" variable nil (reparse-symbol function_parameters) [8063 8077])
                            ("mouthTopUpL_bs" variable nil (reparse-symbol function_parameters) [8104 8118])
                            ("mouthBotDnR_bs" variable nil (reparse-symbol function_parameters) [8145 8159])
                            ("mouthBotDnL_bs" variable nil (reparse-symbol function_parameters) [8188 8202])
                            ("mouthSmileR_bs" variable nil (reparse-symbol function_parameters) [8239 8253])
                            ("mouthSmileL_bs" variable nil (reparse-symbol function_parameters) [8280 8294])
                            ("mouthSadR_bs" variable nil (reparse-symbol function_parameters) [8321 8333])
                            ("mouthSadL_bs" variable nil (reparse-symbol function_parameters) [8358 8370])
                            ("mouthNarrow_bs" variable nil (reparse-symbol function_parameters) [8404 8418])
                            ("mouthWide_bs" variable nil (reparse-symbol function_parameters) [8444 8456])
                            ("mouth_peanutUp_bs" variable nil (reparse-symbol function_parameters) [8480 8497])
                            ("mouth_peanutDown_bs" variable nil (reparse-symbol function_parameters) [8525 8544])
                            ("eyeWideL_bs" variable nil (reparse-symbol function_parameters) [8582 8593])
                            ("eyeWideR_bs" variable nil (reparse-symbol function_parameters) [8618 8629])
                            ("eyeSquintL_bs" variable nil (reparse-symbol function_parameters) [8654 8667])
                            ("eyeSquintR_bs" variable nil (reparse-symbol function_parameters) [8694 8707])
                            ("rEyeDilate" variable nil (reparse-symbol function_parameters) [8743 8753])
                            ("lEyeDilate" variable nil (reparse-symbol function_parameters) [8781 8791])
                            ("bodySqStr_bs" variable nil (reparse-symbol function_parameters) [8819 8831])
                            ("mouthSquashStretch_bs" variable nil (reparse-symbol function_parameters) [8865 8886])
                            ("jawOpen_bs" variable nil (reparse-symbol function_parameters) [8919 8929])
                            ("L_footSquashStrectch_bs" variable nil (reparse-symbol function_parameters) [8964 8987])
                            ("R_footSquashStrectch_bs" variable nil (reparse-symbol function_parameters) [9021 9044])
                            ("mouthSquash_bs" variable nil (reparse-symbol function_parameters) [9086 9100])
                            ("mouthStretch_bs" variable nil (reparse-symbol function_parameters) [9126 9141])
                            ("lEyeLatt" variable nil (reparse-symbol function_parameters) [9177 9185])
                            ("rEyeLatt" variable nil (reparse-symbol function_parameters) [9213 9221])
                            ("bot_rgJnt" variable nil (reparse-symbol function_parameters) [9258 9267])
                            ("mainMouth_skJnt" variable nil (reparse-symbol function_parameters) [9285 9300])
                            ("jaw_skJnt" variable nil (reparse-symbol function_parameters) [9318 9327])
                            ("head_ctrl" variable nil (reparse-symbol function_parameters) [9343 9352])
                            ("rEyelidUpper_jnt" variable nil (reparse-symbol function_parameters) [9377 9393])
                            ("lEyelidUpper_jnt" variable nil (reparse-symbol function_parameters) [9419 9435])
                            ("rEyelidLower_jnt" variable nil (reparse-symbol function_parameters) [9469 9485])
                            ("lEyelidLower_jnt" variable nil (reparse-symbol function_parameters) [9511 9527])
                            ("head_skJnt" variable nil (reparse-symbol function_parameters) [9562 9572])
                            ("L_frontFootIK_Quad_ctrl" variable nil (reparse-symbol function_parameters) [9598 9621])
                            ("R_frontFootIK_Quad_ctrl" variable nil (reparse-symbol function_parameters) [9650 9673])
                            ("L_BackFootIK_Quad_ctrl" variable nil (reparse-symbol function_parameters) [9710 9732])
                            ("R_BackFootIK_Quad_ctrl" variable nil (reparse-symbol function_parameters) [9756 9778])
                            ("L_FrontfootSquashStrectch_bs" variable nil (reparse-symbol function_parameters) [9811 9839])
                            ("R_FrontfootSquashStrectch_bs" variable nil (reparse-symbol function_parameters) [9873 9901])
                            ("L_BackfootSquashStrectch_bs" variable nil (reparse-symbol function_parameters) [9943 9970])
                            ("R_BackfootSquashStrectch_bs" variable nil (reparse-symbol function_parameters) [10005 10032]))                          )
                        (reparse-symbol indented_block_body) [5756 20184])
                    ("\"\"\"
    def rigWave(self):

        wNode = shadingNode('multiplyDivide', asUtility=True)
        wNode.input2Y.set(2)   # wave multiplier
        connectAttr(self.tremble_ctrl.translateY, wNode.input1Y)
        connectAttr(wNode.outputY, self.sine_Attr.amplitude)
        connectAttr(self.tremble_ctrl.frequency, self.sine_Attr.wavelength)
        connectAttr(self.sine_Attr.outputGeometry[0], self.head_mesh.inMesh, f=True)
        self.tremble_ctrl.frequency.set(1)
    \"\"\"" code nil (reparse-symbol indented_block_body) [20190 20666])
                    ("dualControlNetwork" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20696 20700])
                            ("ctrlNode" variable nil (reparse-symbol function_parameters) [20702 20710])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [20712 20721])
                            ("negBlend" variable nil (reparse-symbol function_parameters) [20723 20731])
                            ("posBlend" variable nil (reparse-symbol function_parameters) [20733 20741]))                          )
                        (reparse-symbol indented_block_body) [20673 21282])
                    ("quadControlNetwork" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21310 21314])
                            ("ctrlNode" variable nil (reparse-symbol function_parameters) [21316 21324])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [21326 21335])
                            ("upL_blend" variable nil (reparse-symbol function_parameters) [21337 21346])
                            ("upR_blend" variable nil (reparse-symbol function_parameters) [21348 21357])
                            ("dnL_blend" variable nil (reparse-symbol function_parameters) [21359 21368])
                            ("dnR_blend" variable nil (reparse-symbol function_parameters) [21370 21379])
                            ("corrective" variable nil (reparse-symbol function_parameters) [21381 21391]))                          )
                        (reparse-symbol indented_block_body) [21287 28132])
                    ("mouthBlends" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28374 28378]))                          )
                        (reparse-symbol indented_block_body) [28358 33213])
                    ("rigTongue" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34199 34203]))                          )
                        (reparse-symbol indented_block_body) [34185 37209])
                    ("rigTonsil" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37229 37233]))                          )
                        (reparse-symbol indented_block_body) [37215 39604])
                    ("browBlends" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39625 39629]))                          )
                        (reparse-symbol indented_block_body) [39610 41465])
                    ("rigEyes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41484 41488]))                          )
                        (reparse-symbol indented_block_body) [41472 52076])
                    ("rigMouthMain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52102 52106]))                          )
                        (reparse-symbol indented_block_body) [52085 53050])
                    ("rigBodyExtra" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53072 53076]))                          )
                        (reparse-symbol indented_block_body) [53055 54827])
                    ("quadControlNetworkThreshold" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55033 55037])
                            ("ctrlNode" variable nil (reparse-symbol function_parameters) [55039 55047])
                            ("blendNode" variable nil (reparse-symbol function_parameters) [55049 55058])
                            ("upL_blend" variable nil (reparse-symbol function_parameters) [55060 55069])
                            ("upR_blend" variable nil (reparse-symbol function_parameters) [55071 55080])
                            ("dnL_blend" variable nil (reparse-symbol function_parameters) [55082 55091])
                            ("dnR_blend" variable nil (reparse-symbol function_parameters) [55093 55102])
                            ("corrective" variable nil (reparse-symbol function_parameters) [55104 55114]))                          )
                        (reparse-symbol indented_block_body) [55001 69673])
                    ("rigBodyExtraQuad" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69699 69703]))                          )
                        (reparse-symbol indented_block_body) [69678 72032]))                  
                :type "class")
                nil [5715 72032])
            ("\"\"\"
FILES NEEDED
mel.eval('file -import -type \"mayaAscii\" -gr -rpr \"IMPORTEDGRP\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/mouthJaw.ma\";')
mel.eval('file -import -type \"mayaAscii\" -rpr \"IMPORTEDGRP\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/HeadSquashandStretchLattice.ma\";')
mel.eval('file -import -type \"mayaAscii\" -gr -rpr \"IMPORTEDGRP\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/facialUI_hug.ma\";')
mel.eval('file -import -type \"mayaAscii\" -gr -rpr \"IMPORTEDGRP\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/eyelidJoints.ma\";')
mel.eval('file -import -type \"mayaAscii\" -gr -rpr \"IMPORTEDGRP\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/dynamicJoints.ma\";')
mel.eval('file -import -type \"mayaAscii\" -rpr \"IMPORTEDTONGUE\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/tongueJoints.ma\";')
mel.eval('file -import -type \"mayaAscii\" -rpr \"IMPORTEDGRP\" -options \"v=0\"  -pr -loadReferenceDepth \"all\" \"S:/BBF_PIPELINE/BBF/MAYA/Tools/Rigging/Other/tonsilJoints.ma\";')

#BELNDSHAPES
from pymel.core import *

cmds.file('Y:\\Tv\\Hugglewugs\\Chars\\Irving\\Published\\HUG_C_Irving_GEO.mb', rpr=\"PUB\",loadReferenceDepth=\"all\",r=1,gl=1,type=\"mayaBinary\",options=\"v=0\")
cmds.file('Y:\\Tv\\Hugglewugs\\Chars\\Irving\\Published\\HUG_C_Irving_BS.mb', rpr=\"PUB\",loadReferenceDepth=\"all\",r=1,gl=1,type=\"mayaBinary\",options=\"v=0\")

select ('PUB_brow_*_*_BS')
select ('PUB_eyes_*_*_BS', add=True)
select ('PUB_mouth_*_*_BS', add=True)
select ('PUB_mouth_*_BS', add=True)
select ('PUB_foot_*_*_BS', add=True)
select ('PUB_body_*_BS', add=True)
select ('PUB_*inbetween*', deselect=True)
select ('PUB_*Ref*', deselect=True)
select ('PUB_Head_MSH', add=True)

blendShape(n='facial_BS')

blendShape( 'facial_BS', edit=True, ib=True, t=('PUB_Head_MSH', 0, 'PUB_brow_down_inbetween_L_BS', 0.5) )
blendShape( 'facial_BS', edit=True, ib=True, t=('PUB_Head_MSH', 1, 'PUB_brow_down_inbetween_R_BS', 0.5) )

blendShape( 'facial_BS', edit=True, ib=True, t=('PUB_Head_MSH', 10, 'PUB_eyes_squint_inbetween_L_BS', 0.5) )
blendShape( 'facial_BS', edit=True, ib=True, t=('PUB_Head_MSH', 11, 'PUB_eyes_squint_inbetween_R_BS', 0.5) )

select ('PUB_pupil_dilate_L_BS')
select ('PUB_Pupil_L_MSH', add=True)
blendShape(n='PUB_pupilDilate_L_BS')

select ('PUB_pupil_dilate_R_BS')
select ('PUB_Pupil_R_MSH', add=True)
blendShape(n='PUB_pupilDilate_R_BS')

#select ('PUB_mouth_trembleRef_BS')
#select ('PUB_mouth_tremble_BS', add=True)
#blendShape(n='PUB_trembleRef_BS')

rename ('L_IkLeg_CTRL', 'L_leg_IkLeg_CTRL')
rename ('R_IkLeg_CTRL', 'R_leg_IkLeg_CTRL')

#RIG
import bb_bipedBuilder_GUI as bb
reload(bb)

import bb_hugFacialExtra_CLS as hug
reload(hug)
hugEx = hug.hugFacialExtra()
hugEx.initialize()
hugEx.rigTongue()
hugEx.mouthBlends()
hugEx.browBlends()
hugEx.rigEyes()
hugEx.rigMouthMain()
hugEx.rigBodyExtra()
hugEx.rigTonsil()
hugEx.rigBodyExtraQuad()
#SKIN COPY
#cmds.file('Y:\\Tv\\Hugglewugs\\Chars\\Cobby\\Published\\HUG_C_Cobby_BS.mb', rpr=\"PUB\",loadReferenceDepth=\"all\",r=1,gl=1,type=\"mayaBinary\",options=\"v=0\")

\"\"\"" code nil nil [72038 75299])
            ("if" code nil nil [75300 75399]))          
      :file "DMS2_seperateEyelidsConnection.py"
      :pointmax 75399
      :unmatched-syntax '((INDENT_BLOCK 75379 . 75399) (INDENT_BLOCK 75356 . 75399) (INDENT_BLOCK 75327 . 75399) (IF 75300 . 75302) ($EOI 75399 . 75399) ($EOI 75399 . 75399)))
    (semanticdb-table "eyeProjMapsDMS2.py"
      :major-mode 'python-mode
      :tags 
        '( ("vert" variable nil nil [12 76])
            ("vertPos" variable nil nil [95 123])
            ("corneaTrans" variable nil nil [140 186])
            ("corneaTrans" code nil nil [187 218])
            ("corneaTrans" code nil nil [219 249])
            ("loc" variable nil nil [251 305])
            ("locParent" variable nil nil [306 357])
            ("locParentRoot" variable nil nil [358 419])
            ("pm" code nil nil [486 529])
            ("pm" code nil nil [589 625])
            ("pm" code nil nil [626 714])
            ("pm" code nil nil [715 803])
            ("pm" code nil nil [805 854])
            ("pm" code nil nil [855 904])
            ("pm" code nil nil [905 954])
            ("pm" code nil nil [956 1001])
            ("pm" code nil nil [1002 1047])
            ("pm" code nil nil [1048 1093])
            ("pm" code nil nil [1095 1147])
            ("pm" code nil nil [1148 1214])
            ("pm" code nil nil [1215 1278])
            ("pm" code nil nil [1280 1395])
            ("pm" code nil nil [1396 1508])
            ("neg" variable nil nil [1510 1564])
            ("neg" code nil nil [1565 1584])
            ("pm" code nil nil [1585 1642])
            ("pm" code nil nil [1643 1702])
            ("vert" variable nil nil [1715 1779])
            ("vertPos" variable nil nil [1798 1826])
            ("corneaTrans" variable nil nil [1843 1889])
            ("corneaTrans" code nil nil [1890 1921])
            ("corneaTrans" code nil nil [1922 1952])
            ("loc" variable nil nil [1954 2008])
            ("locParent" variable nil nil [2009 2060])
            ("locParentRoot" variable nil nil [2061 2122])
            ("pm" code nil nil [2189 2232])
            ("pm" code nil nil [2292 2328])
            ("pm" code nil nil [2329 2417])
            ("pm" code nil nil [2418 2506])
            ("pm" code nil nil [2508 2557])
            ("pm" code nil nil [2558 2607])
            ("pm" code nil nil [2608 2657])
            ("pm" code nil nil [2659 2704])
            ("pm" code nil nil [2705 2750])
            ("pm" code nil nil [2751 2796])
            ("pm" code nil nil [2798 2849])
            ("pm" code nil nil [2850 2916])
            ("pm" code nil nil [2917 2980])
            ("pm" code nil nil [2982 3097])
            ("pm" code nil nil [3098 3210])
            ("neg" variable nil nil [3212 3266])
            ("neg" code nil nil [3267 3286])
            ("pm" code nil nil [3287 3344]))          
      :file "eyeProjMapsDMS2.py"
      :pointmax 3404
      :unmatched-syntax '((NAME 3345 . 3347) ($EOI 3404 . 3404)))
    (semanticdb-table "Omni.py"
      :major-mode 'python-mode
      :tags 
        '( ("maya.cmds" include nil nil [1 23])
            ("pymel.core" include nil nil [24 47])
            ("RiggingLib.General.bb_shapes_CLS" include nil nil [49 94])
            ("omniZero" function
               (:documentation "
    returnType : parent group of last item in 'sel'
    "
                :arguments 
                  ( ("sel" variable nil (reparse-symbol function_parameters) [109 112]))                  )
                nil [96 609])
            ("getCtrls" function (:arguments 
              ( ("sde" variable nil (reparse-symbol function_parameters) [623 626])
                ("sfx" variable nil (reparse-symbol function_parameters) [633 636]))              ) nil [610 984])
            ("makeOmniCtrl" function (:arguments 
              ( ("dest" variable nil (reparse-symbol function_parameters) [1002 1006])
                ("ctrlName" variable nil (reparse-symbol function_parameters) [1013 1021]))              ) nil [985 1245])
            ("test" variable nil nil [1258 1298])
            ("zeros" variable nil nil [1299 1321])
            ("omniCtrlShape" variable nil nil [1335 1399])
            ("rigOmniCTRL" function (:arguments 
              ( ("zeros" variable nil (reparse-symbol function_parameters) [1491 1496]))              ) nil [1475 3918])
            ("attrs" variable nil nil [3927 3953]))          
      :file "Omni.py"
      :pointmax 3954
      :unmatched-syntax nil))
  :file "!drive_c!Users!sebastian.haas!workspace!BBF_PIPELINE!BBF!Maya!Lib!RiggingLib!Other!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
