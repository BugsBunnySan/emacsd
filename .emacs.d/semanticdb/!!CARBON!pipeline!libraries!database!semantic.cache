;; Object database/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "database/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("platform" include nil nil [314 342])
            ("getpass" include nil nil [314 342])
            ("os" include nil nil [314 342])
            ("PROJECT_JSON" code nil nil [344 507])
            ("del" code nil nil [509 521])
            ("checkin" function (:arguments 
              ( ("file" variable nil (reparse-symbol function_parameters) [535 539])
                ("task" variable nil (reparse-symbol function_parameters) [541 545]))              ) nil [523 620])
            ("Project" type
               (:documentation "
    .. todo::
        simple place holder...
        needs extension, once we upgrade to a asset-manager
    "
                :superclasses ("object")
                :members 
                  ( ("__name" variable nil (reparse-symbol indented_block_body) [769 782])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [820 838]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [800 804])
                            ("name" variable nil (reparse-symbol function_parameters) [805 809]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [787 839])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [856 860]))                          )
                        (reparse-symbol indented_block_body) [843 932])
                    ("type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [960 964]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [937 992])
                    ("name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1020 1024]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [997 1054]))                  
                :type "class")
                nil [621 1054])
            ("Task" type
               (:documentation "
    .. todo::
        simple place holder...
        needs extension, once we upgrade to a asset-manager
    "
                :superclasses ("object")
                :members 
                  ( ("__name" variable nil (reparse-symbol indented_block_body) [1200 1213])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1251 1269]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1231 1235])
                            ("name" variable nil (reparse-symbol function_parameters) [1236 1240]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1218 1270])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1287 1291]))                          )
                        (reparse-symbol indented_block_body) [1274 1360])
                    ("type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1387 1391]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1364 1416]))                  
                :type "class")
                nil [1055 1416])
            ("User" type
               (:documentation "
    .. todo::
        simple place holder...
        needs extension, once we upgrade to a asset-manager
    "
                :superclasses ("object")
                :members 
                  ( ("__name" variable nil (reparse-symbol indented_block_body) [1562 1575])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1634 1652]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1593 1597])
                            ("name" variable nil (reparse-symbol function_parameters) [1598 1602])
                            ("authencication" variable nil (reparse-symbol function_parameters) [1604 1618]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1580 1653])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1670 1674]))                          )
                        (reparse-symbol indented_block_body) [1657 1743])
                    ("type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1770 1774]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1747 1799]))                  
                :type "class")
                nil [1417 1799])
            ("get_task" function
               (:documentation "
    get :class:`Project Object<Project>` if project name is valid, otherwise ``None`` is returned.

    :param name: name of an existing project
    :return: ``Project(name)``
    :rtype: :class:`Project<Project>` instance
    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [1813 1817])
                    ("project" variable nil (reparse-symbol function_parameters) [1819 1826]))                  )
                nil [1800 2113])
            ("get_projects" function (:arguments 
              ( ("server" variable nil (reparse-symbol function_parameters) [2131 2137]))              ) nil [2114 2553])
            ("get_project" function
               (:documentation "
    get :class:`Project Object<Project>` if project name is valid, otherwise ``None`` is returned.

    :param name: name of an existing project
    :return: ``Project(name)``
    :rtype: :class:`Project<Project>` instance
    "
                :arguments 
                  ( ("project" variable nil (reparse-symbol function_parameters) [2573 2580]))                  )
                nil [2557 3373])
            ("get_user" function
               (:documentation "
    .. todo::
        simple place holder...
        needs extension, once we upgrade to a asset-manager
        * auto authentication

    :param name: name of the user
    :param authentication: password or authentication key
    :return: :class:`User<User>` instance
    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [3387 3391])
                    ("authentication" variable nil (reparse-symbol function_parameters) [3393 3407]))                  )
                nil [3374 3723])
            ("PROJECT" variable nil nil [3749 3807])
            ("None" code nil nil [3872 3876])
            ("TASK" variable nil nil [3877 3938])
            ("if" code nil nil [3940 4120]))          
      :file "__init__.py"
      :pointmax 4120
      :fsize 4119
      :lastmodtime '(22187 13873 0 0)
      :unmatched-syntax '((NAME 3808 . 3819) (IF 3835 . 3837) (ELSE 3867 . 3871) (RETURN 2077 . 2083) (IF 2095 . 2097) (ELSE 2103 . 2107))))
  :file "!!CARBON!pipeline!libraries!database!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
