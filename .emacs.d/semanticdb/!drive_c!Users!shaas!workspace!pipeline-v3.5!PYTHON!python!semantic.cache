;; Object python/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "python/"
  :tables
  (list
    (semanticdb-table "FBI_afanasySubmitter.py"
      :major-mode 'python-mode
      :tags 
        '( ("pprint" include nil nil [1 26])
            ("os" include nil nil [28 37])
            ("af" include nil nil [39 48])
            ("maya.cmds" include nil nil [50 74])
            ("pymel.core" include nil nil [75 98])
            ("material_utils" include nil nil [100 133])
            ("reload" code nil nil [134 150])
            ("renderNodes" variable nil nil [152 353])
            ("launchRenderslaves" function nil nil [355 1263])
            ("batch_bakeLightmap" function (:arguments 
              ( ("projectPath" variable nil (reparse-symbol function_parameters) [1289 1300])
                ("filePath" variable nil (reparse-symbol function_parameters) [1302 1310])
                ("bakeList" variable nil (reparse-symbol function_parameters) [1312 1320])
                ("renderlayer" variable nil (reparse-symbol function_parameters) [1322 1333])
                ("startFrame" variable nil (reparse-symbol function_parameters) [1335 1345])
                ("endFrame" variable nil (reparse-symbol function_parameters) [1350 1358]))              ) nil [1265 2407])
            ("batch_bakeLightmap_inFrames" function (:arguments 
              ( ("projectPath" variable nil (reparse-symbol function_parameters) [2442 2453])
                ("filePath" variable nil (reparse-symbol function_parameters) [2455 2463])
                ("bakeList" variable nil (reparse-symbol function_parameters) [2465 2473])
                ("renderlayer" variable nil (reparse-symbol function_parameters) [2475 2486])
                ("bakeLayers_options_dic" variable nil (reparse-symbol function_parameters) [2488 2510])
                ("keyframe_bakelayers_children" variable nil (reparse-symbol function_parameters) [2512 2540])
                ("startFrame" variable nil (reparse-symbol function_parameters) [2542 2552])
                ("endFrame" variable nil (reparse-symbol function_parameters) [2557 2565]))              ) nil [2409 6140])
            ("syncToLocalVolumes" function nil nil [6141 7351])
            ("cleanUpLocalVolumes" function nil nil [7352 8232])
            ("testJob" function nil nil [8233 9307])
            ("batch_img2tiledexr" function
               (:documentation "# Get vray version
    try:
        VRAY_VERSION = os.environ['VRAY_VERSION']
    except:
        VRAY_VERSION = 20004"
                :arguments 
                  ( ("convertList" variable nil (reparse-symbol function_parameters) [9333 9344]))                  )
                nil [9310 10273])
            ("batch_img2tx" function (:arguments 
              ( ("convertList" variable nil (reparse-symbol function_parameters) [10291 10302]))              ) nil [10274 11095])
            ("batchCommand" function (:arguments 
              ( ("fileName" variable nil (reparse-symbol function_parameters) [11114 11122])
                ("command" variable nil (reparse-symbol function_parameters) [11125 11132])
                ("project" variable nil (reparse-symbol function_parameters) [11135 11142])
                ("jobSuffix" variable nil (reparse-symbol function_parameters) [11145 11154])
                ("startFrame" variable nil (reparse-symbol function_parameters) [11162 11172])
                ("endFrame" variable nil (reparse-symbol function_parameters) [11177 11185])
                ("byFrame" variable nil (reparse-symbol function_parameters) [11189 11196])
                ("priority" variable nil (reparse-symbol function_parameters) [11201 11209]))              ) nil [11096 12073])
            ("batchRender" function (:arguments 
              ( ("fileName" variable nil (reparse-symbol function_parameters) [12091 12099])
                ("startFrame" variable nil (reparse-symbol function_parameters) [12102 12112])
                ("endFrame" variable nil (reparse-symbol function_parameters) [12115 12123])
                ("project" variable nil (reparse-symbol function_parameters) [12126 12133])
                ("byFrame" variable nil (reparse-symbol function_parameters) [12136 12143])
                ("framesPerHost" variable nil (reparse-symbol function_parameters) [12148 12161])
                ("renderOptions" variable nil (reparse-symbol function_parameters) [12166 12179])
                ("priority" variable nil (reparse-symbol function_parameters) [12185 12193])
                ("jobSuffix" variable nil (reparse-symbol function_parameters) [12200 12209])
                ("hostMask" variable nil (reparse-symbol function_parameters) [12215 12223])
                ("capacity" variable nil (reparse-symbol function_parameters) [12229 12237]))              ) nil [12074 13261])
            ("setFpr" function (:arguments 
              ( ("layer" variable nil (reparse-symbol function_parameters) [14530 14535])
                ("fprIntField" variable nil (reparse-symbol function_parameters) [14538 14549]))              ) nil [14518 14700])
            ("setCapacity" function (:arguments 
              ( ("layer" variable nil (reparse-symbol function_parameters) [14718 14723])
                ("capacityIntField" variable nil (reparse-symbol function_parameters) [14726 14742]))              ) nil [14701 14901])
            ("setCustomFrameRange" function (:arguments 
              ( ("layer" variable nil (reparse-symbol function_parameters) [14929 14934])
                ("crplTextField" variable nil (reparse-symbol function_parameters) [14937 14950]))              ) nil [14904 15077])
            ("renderLayerManager" function nil nil [15078 17068])
            ("renderLayerManager2" function nil nil [17070 22632]))          
      :file "FBI_afanasySubmitter.py"
      :pointmax 22710
      :fsize 23288
      :lastmodtime '(22269 20570 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "TP_appLauncher.py"
      :major-mode 'python-mode
      :tags 
        '( ("time" include nil nil [231 242])
            ("datetime" include nil nil [243 258])
            ("base" include nil nil [260 323])
            ("ui.utils" include nil nil [324 398])
            ("start" variable nil nil [400 419])
            ("print" code nil nil [420 459])
            ("sys" include nil nil [461 471])
            ("json" include nil nil [472 483])
            ("os" include nil nil [484 493])
            ("FBI_globalClassesAdd" include nil nil [495 522])
            ("PySide" include nil nil [524 556])
            ("functools" include nil nil [557 586])
            ("end1" variable nil nil [588 606])
            ("interval1" code nil nil [607 631])
            ("print" code nil nil [632 679])
            ("AppLauncher" type
               (:superclasses ("QtGui.QMainWindow")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [751 786])
                            ("self" variable nil (reparse-symbol indented_block_body) [824 931])
                            ("self" variable nil (reparse-symbol indented_block_body) [944 1010])
                            ("self" variable nil (reparse-symbol indented_block_body) [1052 1107])
                            ("self" variable nil (reparse-symbol indented_block_body) [1148 1170])
                            ("try" code nil (reparse-symbol indented_block_body) [1179 1439])
                            ("f" variable nil (reparse-symbol indented_block_body) [1476 1531])
                            ("lines" variable nil (reparse-symbol indented_block_body) [1540 1561])
                            ("self" variable nil (reparse-symbol indented_block_body) [1570 1602])
                            ("f" code nil (reparse-symbol indented_block_body) [1611 1620])
                            ("self" code nil (reparse-symbol indented_block_body) [1646 1659]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [736 740]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [723 1660])
                    ("initUI" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1689 1693]))                          )
                        (reparse-symbol indented_block_body) [1678 16633])
                    ("refreshDropbox" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16665 16669]))                          )
                        (reparse-symbol indented_block_body) [16646 17448])
                    ("launchApp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17485 17489])
                            ("appName" variable nil (reparse-symbol function_parameters) [17491 17498]))                          )
                        (reparse-symbol indented_block_body) [17471 18313])
                    ("setEnvironmentVariables" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18363 18367])
                            ("projectPath" variable nil (reparse-symbol function_parameters) [18369 18380]))                          )
                        (reparse-symbol indented_block_body) [18335 19725])
                    ("readJsonFile" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19764 19768])
                            ("openPath" variable nil (reparse-symbol function_parameters) [19770 19778]))                          )
                        (reparse-symbol indented_block_body) [19747 19970])
                    ("updateProjectPath" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20005 20009]))                          )
                        (reparse-symbol indented_block_body) [19983 20225]))                  
                :type "class")
                nil [681 20225])
            ("main" function nil nil [20265 20394])
            ("if" code nil nil [20396 20434]))          
      :file "TP_appLauncher.py"
      :pointmax 20435
      :fsize 20877
      :lastmodtime '(22266 18270 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "base.py"
      :major-mode 'python-mode
      :tags nil
      :file "base.py"
      :pointmax 1394
      :fsize 1449
      :lastmodtime '(22266 18270 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "FBI_globalClassesAdd.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [286 295])
            ("shutil" include nil nil [296 309])
            ("xml.dom.minidom" include nil nil [310 343])
            ("base" include nil nil [344 377])
            ("globalAssetTypes" variable nil nil [379 487])
            ("TaskTypes" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("pass" code nil (reparse-symbol indented_block_body) [540 544]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [525 529]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [512 545])
                    ("shot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [559 563])
                            ("application" variable nil (reparse-symbol function_parameters) [566 577]))                          
                        :documentation "
        Returns all the possible tasks for a Shot based on Application

        :param application: str
        :returns: taskList ( list )
        ")
                        (reparse-symbol indented_block_body) [549 1233])
                    ("asset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1257 1261])
                            ("application" variable nil (reparse-symbol function_parameters) [1264 1275]))                          
                        :documentation "
        Returns all the possible tasks for a Asset based on Application

        :param application: str
        :returns: taskList ( list )
        ")
                        (reparse-symbol indented_block_body) [1246 1952]))                  
                :type "class")
                nil [489 1952])
            ("FolderCreation" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2022 2069]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2007 2011]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1994 2070])
                    ("setUp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2094 2098])
                            ("path" variable nil (reparse-symbol function_parameters) [2100 2104])
                            ("newName" variable nil (reparse-symbol function_parameters) [2106 2113])
                            ("folderType" variable nil (reparse-symbol function_parameters) [2115 2125]))                          
                        :documentation "
        Create entity folder structure

        :param path: str
        :param newName: str
        :param folderType: str ( 'exMain' / 'incMain' )
        :returns: [ 'Fail' / 'Succes', path ]
        ")
                        (reparse-symbol indented_block_body) [2083 2949])
                    ("tasks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2982 2986])
                            ("path" variable nil (reparse-symbol function_parameters) [2988 2992])
                            ("task" variable nil (reparse-symbol function_parameters) [2994 2998])
                            ("application" variable nil (reparse-symbol function_parameters) [3000 3011]))                          
                        :documentation "
        Create task folder structure

        :param path: str
        :param task: str
        :param application: str
        ")
                        (reparse-symbol indented_block_body) [2971 4033])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4049 4053])
                            ("path" variable nil (reparse-symbol function_parameters) [4055 4059])
                            ("task" variable nil (reparse-symbol function_parameters) [4061 4065])
                            ("application" variable nil (reparse-symbol function_parameters) [4067 4078]))                          
                        :documentation "
        Copy the workspace.mel master file from the task folder.

        :param path: str
        :param task: str
        :param application: str
        ")
                        (reparse-symbol indented_block_body) [4039 4395]))                  
                :type "class")
                nil [1966 4395])
            ("SimpleNameAndPath" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4457 4471])
                            ("self" variable nil (reparse-symbol indented_block_body) [4480 4494]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4442 4446]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4429 4495])
                    ("setName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4512 4516])
                            ("name" variable nil (reparse-symbol function_parameters) [4519 4523]))                          )
                        (reparse-symbol indented_block_body) [4499 4549])
                    ("setPath" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4566 4570])
                            ("path" variable nil (reparse-symbol function_parameters) [4573 4577]))                          )
                        (reparse-symbol indented_block_body) [4553 4603]))                  
                :type "class")
                nil [4398 4603])
            ("SubAsset" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [4680 4714]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4665 4669]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4652 4715])
                    ("getNameSpace" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4737 4741]))                          )
                        (reparse-symbol indented_block_body) [4719 4758]))                  
                :type "class")
                nil [4612 4758])
            ("Asset" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [4825 4859])
                            ("self" variable nil (reparse-symbol indented_block_body) [4876 4893]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4810 4814]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4797 4894])
                    ("addSubAsset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4915 4919])
                            ("subAsset" variable nil (reparse-symbol function_parameters) [4922 4930]))                          )
                        (reparse-symbol indented_block_body) [4898 4976]))                  
                :type "class")
                nil [4759 4976])
            ("AssetType" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [5047 5081])
                            ("self" variable nil (reparse-symbol indented_block_body) [5090 5104]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5032 5036]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5019 5105])
                    ("addAsset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5123 5127])
                            ("asset" variable nil (reparse-symbol function_parameters) [5130 5135]))                          )
                        (reparse-symbol indented_block_body) [5109 5175]))                  
                :type "class")
                nil [4977 5175])
            ("SubAssetG" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [5262 5296]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5247 5251]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5234 5297])
                    ("getNameSpace" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5319 5323]))                          )
                        (reparse-symbol indented_block_body) [5301 5340]))                  
                :type "class")
                nil [5193 5340])
            ("AssetG" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [5408 5442])
                            ("self" variable nil (reparse-symbol indented_block_body) [5459 5477]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5393 5397]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5380 5478])
                    ("addSubAssetG" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5500 5504])
                            ("subAssetG" variable nil (reparse-symbol function_parameters) [5507 5516]))                          )
                        (reparse-symbol indented_block_body) [5482 5564]))                  
                :type "class")
                nil [5341 5564])
            ("AssetTypeG" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [5636 5670])
                            ("self" variable nil (reparse-symbol indented_block_body) [5679 5694]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5621 5625]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5608 5695])
                    ("addAssetG" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5714 5718])
                            ("assetG" variable nil (reparse-symbol function_parameters) [5721 5727]))                          )
                        (reparse-symbol indented_block_body) [5699 5769]))                  
                :type "class")
                nil [5565 5769])
            ("SubShot" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [5846 5880]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5831 5835]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5818 5881])
                    ("getNameSpace" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5903 5907]))                          )
                        (reparse-symbol indented_block_body) [5885 5924]))                  
                :type "class")
                nil [5779 5924])
            ("Shot" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [5990 6024])
                            ("self" variable nil (reparse-symbol indented_block_body) [6033 6049]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5975 5979]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5962 6050])
                    ("addSubShot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6070 6074])
                            ("subAsset" variable nil (reparse-symbol function_parameters) [6077 6085]))                          )
                        (reparse-symbol indented_block_body) [6054 6130]))                  
                :type "class")
                nil [5925 6130])
            ("Sequence" type
               (:superclasses ("SimpleNameAndPath")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("SimpleNameAndPath" code nil (reparse-symbol indented_block_body) [6208 6242])
                            ("self" variable nil (reparse-symbol indented_block_body) [6251 6264]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6193 6197]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6180 6265])
                    ("addShot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6282 6286])
                            ("shot" variable nil (reparse-symbol function_parameters) [6289 6293]))                          )
                        (reparse-symbol indented_block_body) [6269 6331]))                  
                :type "class")
                nil [6139 6331])
            ("CurrentProject" type
               (:documentation "
    This class is used to retreive all the information from the particular project. It uses the *FBI_CURRENT_PROJECT* variable as a base and continues to search for folders. This class also contains function to retrieve this information.
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [6644 6681])
                            ("try" code nil (reparse-symbol indented_block_body) [6690 7012])
                            ("self" variable nil (reparse-symbol indented_block_body) [7020 7054])
                            ("self" variable nil (reparse-symbol indented_block_body) [7101 7118])
                            ("for" code nil (reparse-symbol indented_block_body) [7127 9051])
                            ("self" variable nil (reparse-symbol indented_block_body) [9103 9121])
                            ("for" code nil (reparse-symbol indented_block_body) [9139 11620])
                            ("self" variable nil (reparse-symbol indented_block_body) [11637 11656])
                            ("for" code nil (reparse-symbol indented_block_body) [11722 13973]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6629 6633]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6616 13973])
                    ("getSequenceByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14003 14007])
                            ("seqName" variable nil (reparse-symbol function_parameters) [14010 14017]))                          
                        :documentation "
        Get Sequence Class object by sequence name.

        :param seqName: str
        :returns: Sequence ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [13980 14268])
                    ("getShotByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14296 14300])
                            ("seqName" variable nil (reparse-symbol function_parameters) [14303 14310])
                            ("shotName" variable nil (reparse-symbol function_parameters) [14313 14321]))                          
                        :documentation "
        Get Shot Class object by sequence and shot name.

        :param seqName: str
        :param shotName: str
        :returns: Shot ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [14277 14694])
                    ("getSubShotByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14721 14725])
                            ("seqName" variable nil (reparse-symbol function_parameters) [14728 14735])
                            ("shotName" variable nil (reparse-symbol function_parameters) [14738 14746])
                            ("subShotName" variable nil (reparse-symbol function_parameters) [14749 14760]))                          
                        :documentation "
        Get Sub Shot Class object by sequence, shot and sub shot name.

        :param seqName: str
        :param shotName: str
        :param subShotName: str
        :returns: SubShot ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [14699 15214])
                    ("\"\"\"def getSubShotByNamespace( self , seqName , namespace , subShotName=\"__MAIN__\"):
        returnSubShotPath = \"\"
        for assetType in self.assetTypes:
            for asset in assetType.assets:
                for subAsset in asset.subAssets:
                    xmlPath = subAsset.path + \"/info.xml\"
                    if os.path.exists(xmlPath) and os.path.isfile(xmlPath):
                        XMLdoc = minidom.parse(xmlPath)
                        try:
                            XMLinfo = XMLdoc.getElementsByTagName(\"INFO\")[0]
                            v = XMLinfo.getAttribute(key)
                            if v != \"\":
                                if v == namespace
                                    returnSubShotPath = subAsset.path
                        except:
                            pass
                        
        if returnSubShotPath != \"\":
            return returnSubShotPath
        else:
            return None\"\"\"" code nil (reparse-symbol indented_block_body) [15227 16193])
                    ("getAssetTypeByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16232 16236])
                            ("assetTypeName" variable nil (reparse-symbol function_parameters) [16239 16252]))                          
                        :documentation "
        Get AssetType Class object by assetType name.

        :param assetTypeName: str
        :returns: AssetType ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [16208 16557])
                    ("getAssetByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16603 16607])
                            ("assetTypeName" variable nil (reparse-symbol function_parameters) [16610 16623])
                            ("assetName" variable nil (reparse-symbol function_parameters) [16626 16635]))                          
                        :documentation "
        Get Asset Class object by assetType and asset name.

        :param assetTypeName: str
        :param assetName: str
        :returns: Asset ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [16583 17033])
                    ("getSubAssetByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17081 17085])
                            ("assetTypeName" variable nil (reparse-symbol function_parameters) [17088 17101])
                            ("assetName" variable nil (reparse-symbol function_parameters) [17104 17113])
                            ("subAssetName" variable nil (reparse-symbol function_parameters) [17116 17128]))                          
                        :documentation "
        Get Sub Asset Class object by assetType, asset and sub asset name.

        :param assetTypeName: str
        :param assetName: str
        :param subAssetName: str
        :returns: Asset ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [17058 17609])
                    ("getAssetTypeGByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17656 17660])
                            ("assetTypeGName" variable nil (reparse-symbol function_parameters) [17663 17677]))                          
                        :documentation "
        Get AssetTypeG Class object by global assetType name.

        :param assetTypeGName: str
        :returns: AssetTypeG ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [17631 18001])
                    ("getAssetGByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18048 18052])
                            ("assetTypeGName" variable nil (reparse-symbol function_parameters) [18055 18069])
                            ("assetGName" variable nil (reparse-symbol function_parameters) [18072 18082]))                          
                        :documentation "
        Get AssetG Class object by global assetType and asset name.

        :param assetTypeGName: str
        :param assetGName: str
        :returns: AssetG ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [18027 18498])
                    ("getSubAssetGByName" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18547 18551])
                            ("assetTypeGName" variable nil (reparse-symbol function_parameters) [18554 18568])
                            ("assetGName" variable nil (reparse-symbol function_parameters) [18571 18581])
                            ("subAssetGName" variable nil (reparse-symbol function_parameters) [18584 18597]))                          
                        :documentation "
        Get Sub AssetG Class object by global assetType, asset and sub asset name.

        :param assetTypeGName: str
        :param assetGName: str
        :param subAssetGName: str
        :returns: SubAssetG ( class ) / None
        ")
                        (reparse-symbol indented_block_body) [18523 19101])
                    ("getNumberedDirectories" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19134 19138])
                            ("dir" variable nil (reparse-symbol function_parameters) [19141 19144]))                          
                        :documentation "
        List all the numbered directories in a folder.

        :param dir: str
        :returns: numberedDirectories ( list )
        ")
                        (reparse-symbol indented_block_body) [19106 19717])
                    ("getXmlProperty" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19746 19750])
                            ("path" variable nil (reparse-symbol function_parameters) [19753 19757])
                            ("key" variable nil (reparse-symbol function_parameters) [19760 19763]))                          
                        :documentation "
        Get XML information.

        :param path: str
        :param key: str
        :returns: value ( str ) / None
        ")
                        (reparse-symbol indented_block_body) [19726 20396])
                    ("checkXmlPropertyClashes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20443 20447])
                            ("key" variable nil (reparse-symbol function_parameters) [20450 20453])
                            ("value" variable nil (reparse-symbol function_parameters) [20456 20461]))                          
                        :documentation " 
        Check for value clashes within the XMLs.

        :returns: 'CLASH' / 'CLEAR'
        ")
                        (reparse-symbol indented_block_body) [20414 21384])
                    ("setXmlProperty" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21413 21417])
                            ("path" variable nil (reparse-symbol function_parameters) [21420 21424])
                            ("key" variable nil (reparse-symbol function_parameters) [21427 21430])
                            ("value" variable nil (reparse-symbol function_parameters) [21433 21438]))                          
                        :documentation "
        Set XML information.

        :param path: str
        :param key: str
        :param value: str
        :returns: value ( str ) / None
        ")
                        (reparse-symbol indented_block_body) [21393 22222]))                  
                :type "class")
                nil [6334 22222])
            ("UserSettings" type
               (:documentation "
    This class is used to store simple information. The *HOME* variable is used to retrieve your home directory, an additional folder *.fbi* is added. In this folder is where all the information is stored.
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [22498 22669])
                            ("self" code nil (reparse-symbol indented_block_body) [22677 22714])
                            ("if" code nil (reparse-symbol indented_block_body) [22724 22797]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22483 22487]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [22470 22797])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22828 22832])
                            ("key" variable nil (reparse-symbol function_parameters) [22835 22838]))                          
                        :documentation "
        :param key: str
        :returns: value ( str )
        ")
                        (reparse-symbol indented_block_body) [22819 23171])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23189 23193])
                            ("key" variable nil (reparse-symbol function_parameters) [23196 23199])
                            ("value" variable nil (reparse-symbol function_parameters) [23202 23207]))                          
                        :documentation "
        :param key: str
        :param value: str
        ")
                        (reparse-symbol indented_block_body) [23180 23381]))                  
                :type "class")
                nil [22224 23381]))          
      :file "FBI_globalClassesAdd.py"
      :pointmax 23381
      :fsize 24032
      :lastmodtime '(22266 18270 0 0)
      :unmatched-syntax nil))
  :file "!drive_c!Users!shaas!workspace!pipeline-v3.5!PYTHON!python!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
